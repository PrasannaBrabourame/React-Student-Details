{"version":3,"sources":["Components/Services/env.js","Components/Redux/action/userAction.js","Components/Redux/action/actionType.js","Components/Pages/commanComponent.js","Components/Pages/studentDetails.js","Components/Pages/register.js","Components/Pages/header.js","App.js","serviceWorker.js","Components/Redux/reducer/index.js","Components/Redux/reducer/studentReducer.js","index.js","Components/Redux/store/configureStore.js"],"names":["env","URL","fetchAllStudent","dispatch","Promise","resolve","reject","axios","get","then","response","getAllStudent","data","catch","error","fetchAllNationality","getAllNationality","fetchCurrentStudent","id","concat","getCurrentStudent","fetchFamilyMembers","getFamilyMembers","submittedStudentDetails","submittedStudent","familyMembers","type","getCurrentStudentNationality","getCurrentUserNationality","userNationality","studentdetails","createNewStudent","deleteStudent","updateStudent","FamilyMembers","currentStudentdetails","nationality","Modal","_ref","handleClose","show","children","react_default","a","createElement","className","onClick","NewfamilyMembers","props","nfamilyMembers","map","val","index","key","data-id","name","value","relationship","firstName","lastName","dateOfBirth","NewStudent","_ref2","handlesubmit","StudentDetails","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChanges","event","undefined","target","dataset","toConsumableArray","state","setState","newStudent","objectSpread","addNewStudentModel","e","newStudentshow","newStudentHideModal","getAllSubmittedStudent","isSubmitted","showModal","field","hideModal","prevState","showfamilyMember","role","1","2","3","showDetails","bind","assertThisInitialized","_this2","studentFetch","nationalityFetch","dataidx","_this3","currentStudent","getfamilymembers","cDate","Date","getDate","getMonth","getFullYear","Title","currentSubmittedStudent","disabled","ID","_this4","_this5","i","listView","length","commanComponent_Modal","familymembersview","commanComponent_NewStudent","onChange","placeholder","generateNationality","commanComponent_NewfamilyMembers","Component","connect","ownProps","userAction","RegisterDetails","approveSumbit","registerStudentSumbit","splice","post","console","log","_loop","responseout","put","Number","responseNationality","Header","handleChange","getRole","href","studentDetails","register","App","header","Boolean","window","location","hostname","match","combineReducers","arguments","action","filter","assign","initialState","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae8fc1dd.chunk.js","sourcesContent":["const env = {\r\n    URL : \"http://localhost:8088\"\r\n}\r\n\r\nexport default env","import * as actionTypes from './actionType';\r\nimport axios from 'axios';\r\nimport env from '../../Services/env'\r\n\r\n\r\nexport const fetchAllStudent = () => {\r\n    return (dispatch) => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(env.URL + \"/api/Students\")\r\n                .then(response => {\r\n                    resolve(dispatch(getAllStudent(response.data)))\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                });\r\n        })\r\n    };\r\n};\r\n\r\nexport const fetchAllNationality = () => {\r\n    return (dispatch) => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(env.URL + \"/api/Nationalities\")\r\n                .then(response => {\r\n                    resolve(dispatch(getAllNationality(response.data)))\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                });\r\n        })\r\n    };\r\n};\r\n\r\nexport const fetchCurrentStudent = (id) => {\r\n    return (dispatch) => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(env.URL + `/api/Students/${id}`)\r\n                .then(response => {\r\n                    resolve(dispatch(getCurrentStudent(response.data)))\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                });\r\n        })\r\n    };\r\n};\r\n\r\nexport const fetchFamilyMembers = (id) => {\r\n    return (dispatch) => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(env.URL + `/api/Students/${id}/FamilyMembers`)\r\n                .then(response => {\r\n                    resolve(dispatch(getFamilyMembers(response.data)))\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                });\r\n        })\r\n    }\r\n}\r\n\r\nexport const submittedStudentDetails = (submittedStudent, familyMembers) => {\r\n    return {\r\n        type: actionTypes.GET_ALL_SUBMITTEDSTUDENT,\r\n        submittedStudent: submittedStudent,\r\n        familyMembers: familyMembers\r\n    }\r\n}\r\n\r\n\r\nexport const currentRole = (role) => {\r\n    return {\r\n        type: actionTypes.CURRENT_ROLE,\r\n        role: role\r\n    }\r\n}\r\n\r\nexport const registerStudentSumbit = (submittedStudent, familyMembers) => {\r\n    return (dispatch) => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.post(env.URL + `/api/Students/`, submittedStudent)\r\n                .then(response => {\r\n                    console.log(response);\r\n                    //resolve(dispatch(createNewStudent(submittedStudent)))\r\n                    if (familyMembers.length > 0) {\r\n                        for (let i = 0; i < familyMembers.length; i++) {\r\n                            axios.post(env.URL + `/api/Students/${response.data.ID}/FamilyMembers/`, familyMembers[i])\r\n                                .then(responseout => {\r\n                                    console.log(responseout);\r\n                                    //let result = { familyMemberID: responseout.data.ID, nationalityID: Number(familyMembers[i].nationality) }\r\n                                    axios.put(env.URL + `/api/FamilyMembers/${responseout.data.ID}/Nationality/${Number(familyMembers[i].nationality)}`)\r\n                                        .then(responseNationality => {\r\n                                            dispatch(createNewStudent(responseNationality))\r\n                                        }).catch(error => {\r\n                                            reject(error);\r\n                                        })\r\n                                })\r\n                                .catch(error => {\r\n                                    reject(error);\r\n                                });\r\n                        }\r\n                        resolve('Success')\r\n                    }else{\r\n                        resolve(dispatch(createNewStudent(submittedStudent)))\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                });\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCurrentStudentNationality = (id) => {\r\n    return (dispatch) => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get(env.URL + `/api/Students/${id}/Nationality/`)\r\n                .then(response => {\r\n                    resolve(dispatch(getCurrentUserNationality(response.data)))\r\n                })\r\n                .catch(error => {\r\n                    reject(error);\r\n                });\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCurrentUserNationality = (userNationality) => {\r\n    return {\r\n        type: actionTypes.GET_CURRENT_STUDENT_NATIONALITY,\r\n        userNationality: userNationality\r\n    }\r\n}\r\n\r\nexport const getAllStudent = (studentdetails) => {\r\n    return {\r\n        type: actionTypes.GET_STUDENT,\r\n        studentdetails: studentdetails\r\n    }\r\n}\r\n\r\nexport const createNewStudent = (studentdetails) => {\r\n    return {\r\n        type: actionTypes.CREATE_NEW_STUDENT,\r\n        studentdetails: studentdetails\r\n    }\r\n};\r\n\r\nexport const deleteStudent = (id) => {\r\n    return {\r\n        type: actionTypes.DELETE_STUDENT,\r\n        id: id\r\n    }\r\n};\r\n\r\nexport const updateStudent = (studentdetails, id) => {\r\n    return {\r\n        type: actionTypes.UPDATE_STUDENT_DETAILS,\r\n        studentdetails: studentdetails,\r\n        id: id\r\n    }\r\n};\r\n\r\nexport const getFamilyMembers = (FamilyMembers) => {\r\n    return {\r\n        type: actionTypes.GET_FAMILY_MEMBERS,\r\n        FamilyMembers: FamilyMembers,\r\n    }\r\n};\r\n\r\nexport const updateFamilyMember = (studentdetails, id) => {\r\n    return {\r\n        type: actionTypes.UPDATE_FAMILT_MEMBER,\r\n        studentdetails: studentdetails,\r\n        id: id\r\n    }\r\n};\r\n\r\nexport const deleteFamilyMember = (studentdetails, id) => {\r\n    return {\r\n        type: actionTypes.DELETE_FAMILT_MEMBER,\r\n        studentdetails: studentdetails,\r\n        id: id\r\n    }\r\n};\r\n\r\nexport const getCurrentStudent = (currentStudentdetails) => {\r\n    return {\r\n        type: actionTypes.GET_STUDENT_DETAILS,\r\n        currentStudentdetails: currentStudentdetails\r\n    }\r\n}\r\n\r\nexport const getFamilyMemberNationality = (studentdetails, id) => {\r\n    return {\r\n        type: actionTypes.GET_FAMILY_MEMBER_NATIONALITY,\r\n        studentdetails: studentdetails,\r\n        id: id\r\n    }\r\n};\r\n\r\nexport const updateFamilyMemberNationality = (studentdetails, id) => {\r\n    return {\r\n        type: actionTypes.UPDATE_FAMILY_MEMBER_NATIONALITY,\r\n        studentdetails: studentdetails,\r\n        id: id\r\n    }\r\n};\r\n\r\n\r\nexport const getAllNationality = (nationality) => {\r\n    return {\r\n        type: actionTypes.GET_ALL_NATIONALITY,\r\n        nationality: nationality,\r\n    }\r\n};\r\n\r\nexport const receive_error = () => {\r\n    return {\r\n        type: \"RECEIVE_ERROR\"\r\n    };\r\n};","export const GET_STUDENT = 'GET_STUDENT';\r\nexport const CREATE_NEW_STUDENT = 'CREATE_NEW_STUDENT';\r\nexport const DELETE_STUDENT = 'DELETE_STUDENT';\r\nexport const UPDATE_STUDENT_DETAILS = \"UPDATE_STUDENT_DETAILS\";\r\nexport const GET_STUDENT_DETAILS = \"GET_STUDENT_DETAILS\"\r\nexport const GET_FAMILY_MEMBERS = 'GET_FAMILY_MEMBERS';\r\nexport const UPDATE_FAMILT_MEMBER = 'UPDATE_FAMILT_MEMBER';\r\nexport const DELETE_FAMILT_MEMBER = 'DELETE_FAMILT_MEMBER';\r\nexport const GET_FAMILY_MEMBER_NATIONALITY = \"GET_FAMILY_MEMBER_NATIONALITY\";\r\nexport const UPDATE_FAMILY_MEMBER_NATIONALITY = \"UPDATE_FAMILY_MEMBER_NATIONALITY\";\r\nexport const GET_ALL_NATIONALITY = 'GET_ALL_NATIONALITY';\r\nexport const GET_ALL_SUBMITTEDSTUDENT = 'GET_ALL_SUBMITTEDSTUDENT';\r\nexport const CURRENT_ROLE = 'CURRENT_ROLE';\r\nexport const REGISTER_STUDENT_APPROVAL = 'REGISTER_STUDENT_APPROVAL'\r\nexport const GET_CURRENT_STUDENT_NATIONALITY = 'GET_CURRENT_STUDENT_NATIONALITY';\r\n\r\n","import React from 'react'\r\n\r\nexport const Modal = ({ handleClose, show, children }) => {\r\n    return (\r\n        <div className={show ? \"modal display-block\" : \"modal display-none\"}>\r\n\r\n            <section className=\"modal-main\">\r\n                <div className=\"modal_header\">\r\n                    <div className=\"close\" onClick={handleClose}></div>\r\n                </div>\r\n                \r\n                {children}\r\n                <div className=\"modal_footer\">\r\n                    <button className=\"form-row text-center cancel\" onClick={handleClose}>close</button>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const NewfamilyMembers = (props) => {\r\n    return (\r\n      props.nfamilyMembers.map((val, index)=> {\r\n        return (\r\n            <div key={index} className=\"form-row\">\r\n\r\n\r\n            <div className=\"app-col-12\">\r\n                <div className=\"form-row app-col-6 form-left\">\r\n                    <label>Relationship</label>\r\n                    <select data-id={index} name='relationship' value={props.nfamilyMembers[index].relationship} className=\"relationship\">\r\n                        <option value=\"Parent\">Parent</option>\r\n                        <option value=\"Sibling\">Sibling</option>\r\n                        <option value=\"Spouse\">Spouse</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"clear\"></div>\r\n            </div>\r\n\r\n\r\n           \r\n            <div className=\"app-col-12\">\r\n\r\n                <div className=\"form-row app-col-6 form-left\">\r\n                    <label>FirstName</label>\r\n                    <input data-id={index} type=\"text\" name=\"firstName\" value={props.nfamilyMembers[index].firstName} />\r\n                </div>\r\n                    \r\n                <div className=\"form-row app-col-6\">\r\n                    <label>LastName</label>\r\n                    <input data-id={index} type=\"text\"  name=\"lastName\" value={props.nfamilyMembers[index].lastName} />\r\n                </div>\r\n                <div className=\"clear\"></div>\r\n\r\n            </div>\r\n\r\n            <div className=\"app-col-12\">\r\n                <div className=\"form-row app-col-6 form-left\">\r\n                    <label>Date of Birth</label>\r\n                    <input data-id={index} type=\"date\" name=\"dateOfBirth\" value={props.nfamilyMembers[index].dateOfBirth} />\r\n                </div>\r\n                <div className=\"form-row app-col-6\">\r\n                    <label>Nationality</label>\r\n                    <select data-id={index} name='nationality' value={props.nfamilyMembers[index].nationality}>\r\n                        <option value=\"1\">India</option>\r\n                        <option value=\"2\">UAE</option>\r\n                        <option value=\"3\">USA</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"clear\"></div>\r\n            </div>\r\n\r\n\r\n    \r\n        </div>\r\n        )\r\n      })\r\n    )\r\n  }\r\n\r\n  export const NewStudent = ({ handleClose, show, children, handlesubmit }) => {\r\n    return (\r\n        <div className={show ? \"modal display-block\" : \"modal display-none\"}>\r\n            <section className=\"modal-main\">\r\n\r\n                <div className=\"modal_header\">\r\n                    <div className=\"close\" onClick={handleClose}></div>\r\n                </div>\r\n\r\n                {children}\r\n                <div className=\"modal_footer\">\r\n                    <input type=\"submit\" className=\"form-row text-center sucess\" onClick={handlesubmit} value={'submit'} />\r\n                    <button className=\"form-row text-center cancel\" onClick={handleClose}>close</button>\r\n                </div>\r\n                \r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport * as userAction from '../Redux/action/userAction';\r\nimport { NewStudent, Modal, NewfamilyMembers } from './commanComponent'\r\n\r\nclass StudentDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showfamilyMember: false,\r\n            nfamilyMembers: [],\r\n            studentdetails: [],\r\n            nationality: [],\r\n            role: 1,\r\n            show: false,\r\n            newStudentshow: false,\r\n            field: {\r\n                firstName: '',\r\n                lastName: '',\r\n                dateOfBirth: '',\r\n                nationality: 1\r\n            }, newStudent: {\r\n                firstName: '',\r\n                lastName: '',\r\n                dateOfBirth: '',\r\n                nationality: 1,\r\n            }, familyMembers: [],\r\n            isSubmitted: false\r\n        };\r\n        this.relationship = {\r\n            1 : \"Parent\",\r\n            2 : \"Sibling\",\r\n            3 : \"Spouse\"\r\n        }\r\n        this.showDetails = this.showDetails.bind(this);\r\n        this.handleChanges = this.handleChanges.bind(this);\r\n        this.handlesubmit = this.handlesubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleChanges = event => {\r\n        if (event.target.dataset.id !== undefined) {\r\n            let nfamilyMembers = [...this.state.nfamilyMembers]\r\n            nfamilyMembers[event.target.dataset.id][event.target.name] = event.target.value\r\n            this.setState({ nfamilyMembers })\r\n        } else {\r\n            let newStudent = { ...this.state.newStudent }\r\n            newStudent[event.target.name] = event.target.value\r\n            this.setState({ newStudent })\r\n        }\r\n    }\r\n\r\n\r\n    addNewStudentModel = (e) => {\r\n        this.setState({\r\n            newStudentshow: true, newStudent: {\r\n                firstName: '',\r\n                lastName: '',\r\n                dateOfBirth: '',\r\n                nationality: 1,\r\n                familyMembers: []\r\n            }\r\n        });\r\n    }\r\n\r\n    newStudentHideModal = (e) => {\r\n        this.setState({\r\n            newStudentshow: false, newStudent: {\r\n                firstName: '',\r\n                lastName: '',\r\n                dateOfBirth: '',\r\n                nationality: 1,\r\n                familyMembers: []\r\n            }\r\n        });\r\n    }\r\n\r\n    handlesubmit = (e) => {\r\n        this.props.getAllSubmittedStudent(this.state.newStudent, this.state.nfamilyMembers);\r\n        this.setState({\r\n            isSubmitted: true,\r\n            nfamilyMembers: [],\r\n            newStudentshow: false, newStudent: {\r\n                firstName: '',\r\n                lastName: '',\r\n                dateOfBirth: '',\r\n                nationality: 1,\r\n                familyMembers: []\r\n            }\r\n        });\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            show: true, field: {\r\n                firstName: '',\r\n                lastName: '',\r\n                dateOfBirth: '',\r\n                nationality: 1\r\n            }, familyMembers: []\r\n        });\r\n    };\r\n\r\n    hideModal = () => {\r\n        this.setState({\r\n            show: false, field: {\r\n                firstName: '',\r\n                lastName: '',\r\n                dateOfBirth: '',\r\n                nationality: 1\r\n            }, familyMembers: []\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        var studentFetch = this.props.getAllStudent();\r\n        var nationalityFetch = this.props.getAllNationality();\r\n        studentFetch.then(response => {\r\n            this.setState({ studentdetails: response.studentdetails })\r\n            nationalityFetch.then(response => {\r\n                this.setState({ nationality: response.nationality })\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    showDetails(event, index, dataidx, type) {\r\n        if (type === 'studentList') {\r\n            let currentStudent = this.props.getCurrentStudent(dataidx);\r\n            let getfamilymembers = this.props.getfamilymembers(dataidx);\r\n            let getCurrentStudentNationality = this.props.getCurrentStudentNationality(dataidx)\r\n            currentStudent.then(response => {\r\n                var cDate = new Date(response.currentStudentdetails.dateOfBirth)\r\n                this.setState({\r\n                    show: true, field: {\r\n                        firstName: response.currentStudentdetails.firstName,\r\n                        lastName: response.currentStudentdetails.lastName,\r\n                        dateOfBirth: `${cDate.getDate()}-${cDate.getMonth() + 1}-${cDate.getFullYear()}`,\r\n                        nationality: response.currentStudentdetails.firstName\r\n                    }\r\n                })\r\n                getfamilymembers.then(response => {\r\n                    this.setState({ familyMembers: response.FamilyMembers })\r\n                }).catch(() => {\r\n                    this.setState({ familyMembers: [] })\r\n                })\r\n                getCurrentStudentNationality.then(response => {\r\n                    this.setState({\r\n                        field: {\r\n                            nationality: response.userNationality.nationality.Title\r\n                        }\r\n                    })\r\n                }).catch(() => {\r\n                    this.setState({\r\n                        field: {\r\n                            nationality: 'NA'\r\n                        }\r\n                    })\r\n                })\r\n\r\n            }).catch(() => {\r\n                this.setState({\r\n                    show: false\r\n                })\r\n            })\r\n        } else {\r\n            var currentSubmittedStudent = this.props.studentdetails[index - 1];\r\n            this.setState({\r\n                show: true, field: {\r\n                    firstName: currentSubmittedStudent.firstName,\r\n                    lastName: currentSubmittedStudent.lastName,\r\n                    dateOfBirth: currentSubmittedStudent.dateOfBirth,\r\n                    nationality: currentSubmittedStudent.nationality,\r\n                }, familyMembers: currentSubmittedStudent.familyMembers\r\n            })\r\n        }\r\n    }\r\n\r\n    familymembersview(data, index, type) {\r\n        var cDate = new Date(data.dateOfBirth)\r\n        return (\r\n            <div key={index} className=\"form-row\">\r\n                <div className=\"app-col-6 form-left\">\r\n                    <label>Relationship</label>\r\n                    <input type=\"text\" disabled={type} name=\"relationship\" value={data.relationship} />\r\n                    <label>FirstName</label>\r\n                    <input type=\"text\" disabled={type} name=\"firstName\" value={data.firstName} />\r\n                    <label>Date of Birth</label>\r\n                    <input type=\"text\" disabled={type} name=\"dateOfBirth\" value={`${cDate.getDate()}-${cDate.getMonth() + 1}-${cDate.getFullYear()}`} />\r\n                </div>\r\n                <div className=\"app-col-6\">\r\n                    <label className=\"hidden\">Dummy</label>\r\n                    <input className=\"hidden\" type=\"text\" />\r\n                    <label>LastName</label>\r\n                    <input type=\"text\" disabled={type} name=\"lastName\" value={data.lastName} />\r\n                    {\r\n                        data.nationality !== undefined ? <div><label>Nationality</label>\r\n                        <select disabled={type} name='nationality' value={data.nationality.ID}>\r\n                                        <option value=\"1\">India</option>\r\n                                        <option value=\"2\">UAE</option>\r\n                                        <option value=\"3\">USA</option>\r\n                                </select>\r\n                            </div> : null\r\n                    }\r\n\r\n                </div>\r\n                <div className=\"clear\"></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    listView(data, index, type) {\r\n        var cDate = new Date(data.dateOfBirth)\r\n        return (\r\n            <tr key={index} onClick={(event) => this.showDetails(event, index, data.ID, type)}>\r\n                <td>{data.firstName}</td>\r\n                <td>{data.lastName}</td>\r\n                <td>{`${cDate.getDate()}-${cDate.getMonth() + 1}-${cDate.getFullYear()}`}</td>\r\n            </tr>\r\n        )\r\n    }\r\n\r\n    generateNationality(data, index) {\r\n        return (\r\n            <option key={index} value={data.ID}>{data.Title}</option>\r\n        )\r\n    }\r\n\r\n    familyMembers = (e) => {\r\n        this.setState((prevState) => ({\r\n            showfamilyMember: true,\r\n            nfamilyMembers: [...prevState.nfamilyMembers, { relationship: 1 }],\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        let { nfamilyMembers } = this.state\r\n        return (\r\n            <div className=\"main-section\">\r\n                <div className=\"text-center\">Submitted Student Details</div>\r\n                <br></br>\r\n                <table className=\"zui-table form-caption template\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>FirstName</th>\r\n                            <th>LastName</th>\r\n                            <th>Date of Birth</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.studentdetails.map((data, i) => this.listView(data, i + 1, 'studentList'))}\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"form-row text-center\">\r\n                    <button onClick={this.addNewStudentModel} className=\"submit-btn\" >\r\n                        Add New Student\r\n              </button>\r\n                </div>\r\n                {this.props.studentdetails.length > 0 ? <div>\r\n                    <div className=\"text-center\">Pending Student Details for Register Approval</div>\r\n                    <br></br>\r\n                    <table className=\"zui-table form-caption template\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>FirstName</th>\r\n                                <th>LastName</th>\r\n                                <th>Date of Birth</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.props.studentdetails.map((data, i) => this.listView(data, i + 1, 'approvalList'))}\r\n                        </tbody>\r\n                    </table>\r\n                </div> : null}\r\n                {this.state.show ? <Modal show={this.state.show} handleClose={this.hideModal}>\r\n                    <div className=\"form-left app-col-12 form_operation\" >\r\n                        <div className=\"form-row\">\r\n                            <label className=\"form_title\">Basic Information</label>\r\n                            <div className=\"app-col-6 form-left\">\r\n                                <label>FirstName</label>\r\n                                <input type=\"text\" disabled={true} name=\"firstName\" value={this.state.field.firstName} />\r\n                                <label>Date of Birth</label>\r\n                                <input type=\"text\" disabled={true} name=\"dateOfBirth\" value={this.state.field.dateOfBirth} />\r\n                            </div>\r\n                            <div className=\"app-col-6\">\r\n                                <label>LastName</label>\r\n                                <input type=\"text\" disabled={true} name=\"lastName\" value={this.state.field.lastName} />\r\n                                <label>Nationality</label>\r\n                                <select disabled={true} name='nationality' value={this.state.field.nationality}>\r\n                                        <option value=\"1\">India</option>\r\n                                        <option value=\"2\">UAE</option>\r\n                                        <option value=\"3\">USA</option>\r\n                                </select>\r\n                                {/* </div> */}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"clear\"></div>\r\n                    </div>\r\n                    {this.state.familyMembers.length > 0 ? <div className=\"form-left app-col-12 form_operation\" >\r\n                        <label className=\"form_title\">Family Information</label>\r\n                        {this.state.familyMembers.map((data, i) => this.familymembersview(data, i + 1, true))}\r\n                        <br></br>\r\n                        <div className=\"clear\"></div>\r\n                    </div> : null}\r\n\r\n                </Modal> : null}\r\n                {this.state.newStudentshow ? <NewStudent show={this.state.newStudentshow} handleClose={this.newStudentHideModal} handlesubmit={(e) => this.handlesubmit(e)}>\r\n                    <form onChange={(e) => this.handleChanges(e)}>\r\n                        <div className=\"form-left app-col-12 form_operation\" >\r\n                            <div className=\"form-row\">\r\n                                <label className=\"form_title\">Basic Information</label>\r\n                                <div className=\"app-col-6 form-left\">\r\n                                    <label>FirstName</label>\r\n                                    <input className=\"firstName\" placeholder=\"firstName\" type=\"text\" name=\"firstName\" value={this.state.newStudent.firstName} />\r\n                                    <label>Date of Birth</label>\r\n                                    <input className=\"dateOfBirth\" type=\"date\" name=\"dateOfBirth\" value={this.state.newStudent.dateOfBirth} />\r\n                                </div>\r\n                                <div className=\"app-col-6\">\r\n                                    <label>LastName</label>\r\n                                    <input className=\"lastName\" placeholder=\"lastName\" type=\"text\" name=\"lastName\" value={this.state.newStudent.lastName} />\r\n                                    <label>Nationality</label>\r\n                                    <select className=\"nationality\" name='nationality' value={this.state.newStudent.nationality}>\r\n                                        {this.state.nationality.map((data, i) => this.generateNationality(data, i + 1))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"clear\"></div>\r\n                        </div>\r\n                        <div className=\"form-left app-col-12 form_operation\" >\r\n                        </div>\r\n                        <div className=\"extra_form\">\r\n                            {this.state.showfamilyMember ? <div><label className=\"form_title\">Family Information</label><NewfamilyMembers nfamilyMembers={nfamilyMembers} /></div> : null}\r\n                        </div>\r\n                        <div className=\"form-row footer_action\">\r\n                            <input type=\"button\" onClick={this.familyMembers} value={'Add New Member'} />\r\n                        </div>\r\n                    </form>\r\n                </NewStudent> : null}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        studentdetails: state.studentdetails,\r\n        role: state.role\r\n    }\r\n};\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAllStudent: (studentdetails) => dispatch(userAction.fetchAllStudent(studentdetails)),\r\n        getAllNationality: (nationality) => dispatch(userAction.fetchAllNationality(nationality)),\r\n        createNewStudent: studentdetails => dispatch(userAction.createNewStudent(studentdetails)),\r\n        getCurrentStudent: (id) => dispatch(userAction.fetchCurrentStudent(id)),\r\n        getfamilymembers: (id) => dispatch(userAction.fetchFamilyMembers(id)),\r\n        deleteStudent: index => dispatch(userAction.deleteStudent(index)),\r\n        getCurrentStudentNationality: id => dispatch(userAction.getCurrentStudentNationality(id)),\r\n        getAllSubmittedStudent: (submittedStudentDetails, familyMembers) => dispatch(userAction.submittedStudentDetails(submittedStudentDetails, familyMembers)),\r\n        updateStudent: (studentdetails, index) => dispatch(userAction.updateStudent(studentdetails, index))\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentDetails);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport * as userAction from '../Redux/action/userAction';\r\nimport { NewStudent, Modal, NewfamilyMembers } from './commanComponent'\r\n\r\nclass RegisterDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showfamilyMember: false,\r\n            nfamilyMembers: [],\r\n            studentdetails: [],\r\n            role: 2,\r\n            nationality: [],\r\n            show: false,\r\n            newStudentshow: false,\r\n            field: {\r\n                firstName: '',\r\n                lastName: '',\r\n                dateOfBirth: '',\r\n                nationality: 1\r\n            }, newStudent: {\r\n                firstName: '',\r\n                lastName: '',\r\n                dateOfBirth: '',\r\n                nationality: 1,\r\n            }, familyMembers: [],\r\n            isSubmitted: false\r\n        };\r\n        this.showDetails = this.showDetails.bind(this);\r\n        this.handleChanges = this.handleChanges.bind(this);\r\n        this.handlesubmit = this.handlesubmit.bind(this);\r\n        this.approveSumbit = this.approveSumbit.bind(this);\r\n    }\r\n\r\n\r\n    handleChanges = event => {\r\n        if (event.target.dataset.id !== undefined) {\r\n            let nfamilyMembers = [...this.state.nfamilyMembers]\r\n            nfamilyMembers[event.target.dataset.id][event.target.name] = event.target.value\r\n            this.setState({ nfamilyMembers })\r\n        } else {\r\n            let newStudent = { ...this.state.newStudent }\r\n            newStudent[event.target.name] = event.target.value\r\n            this.setState({ newStudent })\r\n        }\r\n    }\r\n\r\n    approveSumbit = (event, index) => {\r\n        var currentSubmittedStudent = this.props.studentdetails[index - 1];\r\n        this.setState({\r\n            field: {\r\n                firstName: currentSubmittedStudent.firstName,\r\n                lastName: currentSubmittedStudent.lastName,\r\n                dateOfBirth: currentSubmittedStudent.dateOfBirth,\r\n                nationality: currentSubmittedStudent.nationality,\r\n            }, familyMembers: currentSubmittedStudent.familyMembers\r\n        }, () => {\r\n            this.props.registerStudentSumbit(this.state.field, this.state.familyMembers);\r\n            this.props.studentdetails.splice(index - 1,1)\r\n            this.setState({\r\n                nfamilyMembers: [],\r\n                newStudentshow: false, newStudent: {\r\n                    firstName: '',\r\n                    lastName: '',\r\n                    dateOfBirth: '',\r\n                    nationality: 1,\r\n                    familyMembers: []\r\n                }, field: {\r\n                    firstName: '',\r\n                    lastName: '',\r\n                    dateOfBirth: '',\r\n                    nationality: ''\r\n                }, familyMembers: []\r\n            });\r\n            var studentFetch = this.props.getAllStudent();\r\n            var nationalityFetch = this.props.getAllNationality();\r\n            studentFetch.then(response => {\r\n                this.setState({ studentdetails: response.studentdetails })\r\n                nationalityFetch.then(response => {\r\n                    this.setState({ nationality: response.nationality })\r\n                })\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    addNewStudentModel = (e) => {\r\n        this.setState({\r\n            newStudentshow: true, newStudent: {\r\n                firstName: '',\r\n                lastName: '',\r\n                dateOfBirth: '',\r\n                nationality: 1,\r\n                familyMembers: []\r\n            }\r\n        });\r\n    }\r\n\r\n    newStudentHideModal = (e) => {\r\n        this.setState({\r\n            newStudentshow: false, newStudent: {\r\n                firstName: '',\r\n                lastName: '',\r\n                dateOfBirth: '',\r\n                nationality: 1,\r\n                familyMembers: []\r\n            }\r\n        });\r\n    }\r\n\r\n    handlesubmit = (e) => {\r\n        this.props.registerStudentSumbit(this.state.newStudent, this.state.nfamilyMembers);\r\n        this.setState({\r\n            isSubmitted: true,\r\n            nfamilyMembers: [],\r\n            newStudentshow: false, newStudent: {\r\n                firstName: '',\r\n                lastName: '',\r\n                dateOfBirth: '',\r\n                nationality: 1,\r\n                familyMembers: []\r\n            }\r\n        });\r\n        var studentFetch = this.props.getAllStudent();\r\n        var nationalityFetch = this.props.getAllNationality();\r\n        studentFetch.then(response => {\r\n            this.setState({ studentdetails: response.studentdetails })\r\n            nationalityFetch.then(response => {\r\n                this.setState({ nationality: response.nationality })\r\n            })\r\n        })\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            show: true, field: {\r\n                firstName: '',\r\n                lastName: '',\r\n                dateOfBirth: '',\r\n                nationality: 1,\r\n            }, familyMembers: []\r\n        });\r\n    };\r\n\r\n    hideModal = () => {\r\n        this.setState({\r\n            show: false, field: {\r\n                firstName: '',\r\n                lastName: '',\r\n                dateOfBirth: '',\r\n                nationality: ''\r\n            }, familyMembers: []\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        var studentFetch = this.props.getAllStudent();\r\n        var nationalityFetch = this.props.getAllNationality();\r\n        studentFetch.then(response => {\r\n            this.setState({ studentdetails: response.studentdetails })\r\n            nationalityFetch.then(response => {\r\n                this.setState({ nationality: response.nationality })\r\n            })\r\n        })\r\n    }\r\n\r\n    showDetails(event, dataidx, index, type) {\r\n        if (type === 'studentList') {\r\n            let currentStudent = this.props.getCurrentStudent(dataidx);\r\n            let getfamilymembers = this.props.getfamilymembers(dataidx);\r\n            let getCurrentStudentNationality = this.props.getCurrentStudentNationality(dataidx)\r\n            currentStudent.then(response => {\r\n                var cDate = new Date(response.currentStudentdetails.dateOfBirth)\r\n                this.setState({\r\n                    show: true, field: {\r\n                        firstName: response.currentStudentdetails.firstName,\r\n                        lastName: response.currentStudentdetails.lastName,\r\n                        dateOfBirth: `${cDate.getDate()}-${cDate.getMonth() + 1}-${cDate.getFullYear()}`,\r\n                        nationality: response.currentStudentdetails.firstName\r\n                    }\r\n                })\r\n                getfamilymembers.then(response => {\r\n                    this.setState({ familyMembers: response.FamilyMembers })\r\n                }).catch(() => {\r\n                    this.setState({ familyMembers: [] })\r\n                })\r\n                getCurrentStudentNationality.then(response => {\r\n                    this.setState({\r\n                        field: {\r\n                            nationality: response.userNationality.nationality.Title\r\n                        }\r\n                    })\r\n                }).catch(() => {\r\n                    this.setState({\r\n                        field: {\r\n                            nationality: 'NA'\r\n                        }\r\n                    })\r\n                })\r\n\r\n            }).catch(() => {\r\n                this.setState({\r\n                    show: false\r\n                })\r\n            })\r\n        } else {\r\n            var currentSubmittedStudent = this.props.studentdetails[index - 1];\r\n            this.setState({\r\n                show: true, field: {\r\n                    firstName: currentSubmittedStudent.firstName,\r\n                    lastName: currentSubmittedStudent.lastName,\r\n                    dateOfBirth: currentSubmittedStudent.dateOfBirth,\r\n                    nationality: currentSubmittedStudent.nationality,\r\n                }, familyMembers: currentSubmittedStudent.familyMembers\r\n            })\r\n        }\r\n    }\r\n\r\n    familymembersview(data, index, type) {\r\n        var cDate = new Date(data.dateOfBirth)\r\n        return (\r\n            <div key={index} className=\"form-row\">\r\n                <div className=\"app-col-6 form-left\">\r\n                    <label>Relationship</label>\r\n                    <input type=\"text\" disabled={type} name=\"relationship\" value={data.relationship} />\r\n                    <label>FirstName</label>\r\n                    <input type=\"text\" disabled={type} name=\"firstName\" value={data.firstName} />\r\n                    <label>Date of Birth</label>\r\n                    <input type=\"text\" disabled={type} name=\"dateOfBirth\" value={`${cDate.getDate()}-${cDate.getMonth() + 1}-${cDate.getFullYear()}`} />\r\n                </div>\r\n                <div className=\"app-col-6\">\r\n                    <label className=\"hidden\">Dummy</label>\r\n                    <input className=\"hidden\" type=\"text\" />\r\n                    <label>LastName</label>\r\n                    <input type=\"text\" disabled={type} name=\"lastName\" value={data.lastName} />\r\n                    {\r\n                        data.nationality !== undefined ? <div><label>Nationality</label>\r\n                        <select disabled={type} name='nationality' value={data.nationality.ID}>\r\n                                        <option value=\"1\">India</option>\r\n                                        <option value=\"2\">UAE</option>\r\n                                        <option value=\"3\">USA</option>\r\n                                </select>\r\n                            </div> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    listView(data, index, type) {\r\n        var cDate = new Date(data.dateOfBirth)\r\n\r\n        return (\r\n            type === 'approvalList' ?\r\n                <tr key={index}>\r\n                    <td>{data.firstName}</td>\r\n                    <td>{data.lastName}</td>\r\n                    <td>{`${cDate.getDate()}-${cDate.getMonth() + 1}-${cDate.getFullYear()}`}</td>\r\n                    <td><button onClick={(event) => this.showDetails(event, data.ID, index, type)}>Edit</button></td>\r\n                    <td><button onClick={(event) => this.approveSumbit(event, index)}>Approval</button></td>\r\n                </tr> : <tr key={index} onClick={(event) => this.showDetails(event, data.ID, index, type)}>\r\n                    <td>{data.firstName}</td>\r\n                    <td>{data.lastName}</td>\r\n                    <td>{`${cDate.getDate()}-${cDate.getMonth() + 1}-${cDate.getFullYear()}`}</td>\r\n                </tr>\r\n        )\r\n    }\r\n\r\n    generateNationality(data, index) {\r\n        return (\r\n            <option key={index} value={data.ID}>{data.Title}</option>\r\n        )\r\n    }\r\n\r\n    familyMembers = (e) => {\r\n        this.setState((prevState) => ({\r\n            showfamilyMember: true,\r\n            nfamilyMembers: [...prevState.nfamilyMembers, { relationship: 1 }],\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        let { nfamilyMembers } = this.state\r\n        return (\r\n            <div className=\"main-section\">\r\n                <div>\r\n                    {this.props.studentdetails.length > 0 ? <div><div className=\"text-center\">Pending Student Details for Register Approval</div>\r\n                        <br></br>\r\n                        <table className=\"zui-table form-caption template\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>FirstName</th>\r\n                                    <th>LastName</th>\r\n                                    <th>Date of Birth</th>\r\n                                    <th>Edit / View</th>\r\n                                    <th>Approve</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.props.studentdetails.map((data, i) => this.listView(data, i + 1, 'approvalList'))}\r\n                            </tbody>\r\n                        </table></div> : null}\r\n                    <div className=\"form-row text-center\">\r\n                        <button onClick={this.addNewStudentModel} className=\"submit-btn\" >\r\n                            Add New Student\r\n                    </button>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"text-center\">Submitted Student Details</div>\r\n                    <br></br>\r\n                    <table className=\"zui-table form-caption template\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>FirstName</th>\r\n                                <th>LastName</th>\r\n                                <th>Date of Birth</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.studentdetails.map((data, i) => this.listView(data, i + 1, 'studentList'))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {this.state.show ? <Modal show={this.state.show} handleClose={this.hideModal}>\r\n                    <div className=\"form-left app-col-12 form_operation\" >\r\n                        <div className=\"form-row\">\r\n                            <label className=\"form_title\">Basic Information</label>\r\n                            <div className=\"app-col-6 form-left\">\r\n                                <label>FirstName</label>\r\n                                <input type=\"text\" disabled={true} name=\"firstName\" value={this.state.field.firstName} />\r\n                                <label>Date of Birth</label>\r\n                                <input type=\"text\" disabled={true} name=\"dateOfBirth\" value={this.state.field.dateOfBirth} />\r\n                            </div>\r\n                            <div className=\"app-col-6\">\r\n                                <label>LastName</label>\r\n                                <input type=\"text\" disabled={true} name=\"lastName\" value={this.state.field.lastName} />\r\n                                <label>Nationality</label>\r\n                                <select disabled={true} name='nationality' value={this.state.field.nationality}>\r\n                                        <option value=\"1\">India</option>\r\n                                        <option value=\"2\">UAE</option>\r\n                                        <option value=\"3\">USA</option>\r\n                                </select>\r\n                               \r\n                                {/* </div> */}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"clear\"></div>\r\n                    </div>\r\n                    {this.state.familyMembers.length > 0 ? <div className=\"form-left app-col-12 form_operation\" >\r\n                        <label className=\"form_title\">Family Information</label>\r\n                        {this.state.familyMembers.map((data, i) => this.familymembersview(data, i + 1, true))}\r\n                        <br></br>\r\n                        <div className=\"clear\"></div>\r\n                    </div> : null}\r\n                </Modal> : null}\r\n                {this.state.newStudentshow ? <NewStudent show={this.state.newStudentshow} handleClose={this.newStudentHideModal} handlesubmit={(e) => this.handlesubmit(e)}>\r\n                    <form onChange={(e) => this.handleChanges(e)}>\r\n                        <div className=\"form-left app-col-12 form_operation\" >\r\n                            <div className=\"form-row\">\r\n                                <label className=\"form_title\">Basic Information</label>\r\n                                <div className=\"app-col-6 form-left\">\r\n                                    <label>FirstName</label>\r\n                                    <input className=\"firstName\" placeholder=\"firstName\" type=\"text\" name=\"firstName\" value={this.state.newStudent.firstName} />\r\n                                    <label>Date of Birth</label>\r\n                                    <input className=\"dateOfBirth\" type=\"date\" name=\"dateOfBirth\" value={this.state.newStudent.dateOfBirth} />\r\n                                </div>\r\n                                <div className=\"app-col-6\">\r\n                                    <label>LastName</label>\r\n                                    <input className=\"lastName\" placeholder=\"lastName\" type=\"text\" name=\"lastName\" value={this.state.newStudent.lastName} />\r\n                                    <label>Nationality</label>\r\n                                    <select className=\"nationality\" name='nationality' value={this.state.newStudent.nationality}>\r\n                                        {this.state.nationality.map((data, i) => this.generateNationality(data, i + 1))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"clear\"></div>\r\n                        </div>\r\n                        <div className=\"form-left app-col-12 form_operation\" >\r\n                        </div>\r\n                        <div className=\"extra_form\">\r\n                            {this.state.showfamilyMember ? <div><label className=\"form_title\">Family Information</label><NewfamilyMembers nfamilyMembers={nfamilyMembers} /></div> : null}\r\n                        </div>\r\n                        <div className=\"form-row footer_action\">\r\n                            <input type=\"button\" onClick={this.familyMembers} value={'Add New Member'} />\r\n                        </div>\r\n                    </form>\r\n                </NewStudent> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        studentdetails: state.studentdetails,\r\n        role: state.role\r\n    }\r\n};\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAllStudent: (studentdetails) => dispatch(userAction.fetchAllStudent(studentdetails)),\r\n        getAllNationality: (nationality) => dispatch(userAction.fetchAllNationality(nationality)),\r\n        createNewStudent: studentdetails => dispatch(userAction.createNewStudent(studentdetails)),\r\n        getCurrentStudent: (id) => dispatch(userAction.fetchCurrentStudent(id)),\r\n        getfamilymembers: (id) => dispatch(userAction.fetchFamilyMembers(id)),\r\n        deleteStudent: index => dispatch(userAction.deleteStudent(index)),\r\n        getAllSubmittedStudent: (submittedStudentDetails, familyMembers) => dispatch(userAction.submittedStudentDetails(submittedStudentDetails, familyMembers)),\r\n        updateStudent: (studentdetails, index) => dispatch(userAction.updateStudent(studentdetails, index)),\r\n        getCurrentStudentNationality: id => dispatch(userAction.getCurrentStudentNationality(id)),\r\n        registerStudentSumbit: (newStudent, nfamilyMembers) => dispatch(userAction.registerStudentSumbit(newStudent, nfamilyMembers))\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterDetails);","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as userAction from '../Redux/action/userAction';\r\nimport StudentDetails from './studentDetails';\r\nimport RegisterDetails from './register';\r\n\r\n class Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { role: 1 }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n    handleChange(e) {\r\n        let role = Number(e.target.value)\r\n        this.setState({role},()=>this.props.getRole(this.state.role))\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"header\">\r\n                    <a href=\"/\">\r\n                        <span>Student Details</span>\r\n                    </a>\r\n                    <div className=\"headerRight\">\r\n                        <div></div>\r\n                        <select value={this.state.role} className=\"SelectBoxMenu\" onChange={(e) => this.handleChange(e)}>\r\n                            <option value=\"1\">Admin</option>\r\n                            <option value=\"2\">Register</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                {this.state.role === 1?<StudentDetails />:<RegisterDetails/>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        role : state.role\r\n    }\r\n};\r\n\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getRole: (role) => dispatch(userAction.currentRole(role)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from \"./Components/Pages/header\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport studentdetails from './studentReducer';\r\n\r\nexport default combineReducers({\r\n    studentdetails: studentdetails\r\n});","import * as actionTypes from '../action/actionType';\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type){\r\n    // case actionTypes.CREATE_NEW_STUDENT:\r\n    // return [\r\n    //   ...state,\r\n    //   Object.assign({}, action.studentDetails)\r\n    // ];\r\n    case actionTypes.DELETE_STUDENT:\r\n    return state.filter((data, i) => i !== action.id);\r\n    case actionTypes.UPDATE_STUDENT_DETAILS:\r\n    state[action.id] = action.studentDetails\r\n        return state;\r\n    case actionTypes.GET_ALL_SUBMITTEDSTUDENT:\r\n      action.submittedStudent.familyMembers = action.familyMembers;\r\n      return [\r\n        ...state,\r\n        Object.assign(action.submittedStudent, action.submittedStudent)\r\n      ]\r\n    case actionTypes.CURRENT_ROLE:\r\n      state['role'] = action.role\r\n      return [...state]\r\n    default:\r\n          return state;\r\n  }\r\n  };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport configureStore from './Components/Redux/store/configureStore';\nconst store = configureStore();\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore,applyMiddleware } from 'redux';\r\nimport rootReducer from '../reducer';\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nexport default function configureStore(initialState) {\r\n    \r\n    return createStore(rootReducer,initialState, applyMiddleware(thunk));\r\n}\r\n"],"sourceRoot":""}